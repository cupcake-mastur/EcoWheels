@app.route('/process_payment', methods=['POST'])
def process_payment():
    try:
        data = request.get_json()
        fullname = data['firstname']
        email = data['email']
        address = data['address']
        city = data['city']
        state = data['state']
        card_name = data['cardname']

        new_order = Order(fullname=fullname, email=email, address=address, city=city, state=state, card_name=card_name)
        db.session.add(new_order)
        db.session.commit()
        return jsonify({"message": "Order processed successfully"}), 200
    except Exception as e:
        db.session.rollback()
        print("Failed to process payment:", e)
        return jsonify({"error": "Error processing payment"}), 500

@app.route('/create-payment-intent', methods=['POST'])
def create_payment_intent():
    try:
        data = request.get_json()
        amount = data['amount']
        currency = data['currency']

        intent = stripe.PaymentIntent.create(
            amount=amount,
            currency=currency,
            automatic_payment_methods={
                'enabled': True,
            },
        )

        return jsonify({
            'clientSecret': intent['client_secret']
        })
    except Exception as e:
        return jsonify(error=str(e)), 403

# @app.route('/process_payment', methods=['POST'])
# def process_payment():
#     try:
#         fullname = request.form['firstname']
#         email = request.form['email']
#         address = request.form['address']
#         city = request.form['city']
#         state = request.form['state']
#         zip_code = request.form['zip']
#         card_name = request.form['cardname']
#         card_number = request.form['cardnumber']
#         exp_month = request.form['expmonth']
#         exp_year = request.form['expyear']
#         cvv = request.form['cvv']
#         cursor = db_2.cursor()
#         query = "INSERT INTO orders (fullname, email, address, city, state, zip_code, card_name, card_number, exp_month, exp_year, cvv) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
#         values = (fullname, email, address, city, state, zip_code, card_name, card_number, exp_month, exp_year, cvv)
#         cursor.execute(query, values)
#         db_2.commit()
#     except Exception as e:
#         db_2.session.rollback()
#         print("Failed to process payment:", e)  # Log the error or use a logging framework
#         return "Error processing payment", 500
#     return redirect(url_for('confirmation'))
#
# @app.route('/view_payment')
# def view_payment():
#     cursor = db_2.cursor(dictionary=True)
#     cursor.execute("SELECT * FROM orders")
#     orders = cursor.fetchall()
#     cursor.close()
#     return render_template("admin/view_payment.html", orders=orders)
#
#
# @app.route('/update_payment/<int:id>', methods=['GET', 'POST'])
# def update_payment(id):
#     if request.method == 'POST':
#         fullname = request.form['fullname']
#         email = request.form['email']
#         address = request.form['address']
#         city = request.form['city']
#         state = request.form['state']
#         zip_code = request.form['zip']
#         card_name = request.form['cardname']
#         card_number = request.form['cardnumber']
#         exp_month = request.form['expmonth']
#         exp_year = request.form['expyear']
#         cvv = request.form['cvv']
#
#         cursor = db_2.cursor()
#         cursor.execute("""
#             UPDATE orders SET fullname=%s, email=%s, address=%s, city=%s, state=%s, zip_code=%s, card_name=%s, card_number=%s, exp_month=%s, exp_year=%s, cvv=%s
#             WHERE order_id=%s
#         """, (fullname, email, address, city, state, zip_code, card_name, card_number, exp_month, exp_year, cvv, id))
#         db_2.commit()
#         cursor.close()
#         return redirect(url_for('view_payment'))
#     else:
#         cursor = db_2.cursor(dictionary=True)
#         cursor.execute("SELECT * FROM orders WHERE order_id = %s", (id,))
#         order = cursor.fetchone()
#         cursor.close()
#         return render_template('admin/update_payment.html', order=order)
#
# @app.route('/delete_payment/<int:id>', methods=['POST'])
# def delete_payment(id):
#     cursor = db_2.cursor()
#     cursor.execute("DELETE FROM orders WHERE order_id = %s", (id,))
#     db_2.commit()
#     cursor.close()
#     return redirect(url_for('view_payment'))











#from model.py
class Order(db.Model):
    __tablename__ = 'orders'

    order_id = db.Column(db.Integer, primary_key=True)
    fullname = db.Column(db.String(255), nullable=False)
    email = db.Column(db.String(255), nullable=False)
    address = db.Column(db.String(255), nullable=False)
    city = db.Column(db.String(100), nullable=False)
    state = db.Column(db.String(100), nullable=False)
    zip_code = db.Column(db.String(20), nullable=False)
    card_name = db.Column(db.String(255), nullable=False)
    card_number = db.Column(db.String(20), nullable=False)
    exp_month = db.Column(db.String(20), nullable=False)
    exp_year = db.Column(db.String(4), nullable=False)
    cvv = db.Column(db.String(5), nullable=False)


payment.sql under sql folder
CREATE DATABASE IF NOT EXISTS eco_wheels;

USE eco_wheels;

CREATE TABLE IF NOT EXISTS orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    fullname VARCHAR(255),
    email VARCHAR(255),
    address VARCHAR(255),
    city VARCHAR(100),
    state VARCHAR(100),
    zip_code VARCHAR(20),
    card_name VARCHAR(255),
    card_number VARCHAR(20),
    exp_month VARCHAR(20),
    exp_year VARCHAR(4),
    cvv VARCHAR(5)
);

payment.html
<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
body {
  font-family: Arial;
  font-size: 17px;
  padding: 8px;
}

* {
  box-sizing: border-box;
}

.row {
  display: -ms-flexbox; /* IE10 */
  display: flex;
  -ms-flex-wrap: wrap; /* IE10 */
  flex-wrap: wrap;
  margin: 0 -16px;
}

.col-25 {
  -ms-flex: 25%; /* IE10 */
  flex: 25%;
}

.col-50 {
  -ms-flex: 50%; /* IE10 */
  flex: 50%;
}

.col-75 {
  -ms-flex: 75%;
  flex: 75%;
}

.col-25,
.col-50,
.col-75 {
  padding: 0 16px;
}

.container {
  background-color: #f2f2f2;
  padding: 5px 20px 15px 20px;
  border: 1px solid lightgrey;
  border-radius: 3px;
}

input[type=text] {
  width: 100%;
  margin-bottom: 20px;
  padding: 12px;
  border: 1px solid #ccc;
  border-radius: 3px;
}

label {
  margin-bottom: 10px;
  display: block;
}

.icon-container {
  margin-bottom: 20px;
  padding: 7px 0;
  font-size: 24px;
}

.btn {
  background-color: #04AA6D;
  color: white;
  padding: 12px;
  margin: 10px 0;
  border: none;
  width: 100%;
  border-radius: 3px;
  cursor: pointer;
  font-size: 17px;
}

.btn:hover {
  background-color: #45a049;
}

a {
  color: #2196F3;
}

hr {
  border: 1px solid lightgrey;
}

span.price {
  float: right;
  color: grey;
}

/* Responsive layout - when the screen is less than 800px wide, make the two columns stack on top of each other instead of next to each other (also change the direction - make the "cart" column go on top) */
@media (max-width: 800px) {
  .row {
    flex-direction: column-reverse;
  }
  .col-25 {
    margin-bottom: 20px;
  }
}
</style>
</head>
<body>

<h2>Checkout Form</h2>
<div class="row">
  <div class="col-75">
    <div class="container">
      <form id="payment-form">
        <div class="row">       
          <div class="col-50">
            <h3>Billing Address</h3>
            <label for="fname"><i class="fa fa-user"></i> Full Name</label>
            <input type="text" id="fname" name="firstname" placeholder="John M. Doe" required>
            <label for="email"><i class="fa fa-envelope"></i> Email</label>
            <input type="text" id="email" name="email" placeholder="john@example.com" required>
            <label for="adr"><i class="fa fa-address-card-o"></i> Address</label>
            <input type="text" id="adr" name="address" placeholder="542 W. 15th Street" required>
            <label for="city"><i class="fa fa-institution"></i> City</label>
            <input type="text" id="city" name="city" placeholder="New York" required>

            <div class="row">
              <div class="col-50">
                <label for="state">State</label>
                <input type="text" id="state" name="state" placeholder="NY" required>
              </div>
            </div>
          </div>

          <div class="col-50">
            <h3>Payment</h3>
            <label for="fname">Accepted Cards</label>
            <div class="icon-container">
              <i class="fa fa-cc-visa" style="color:navy;"></i>
              <i class="fa fa-cc-amex" style="color:blue;"></i>
              <i class="fa fa-cc-mastercard" style="color:red;"></i>
              <i class="fa fa-cc-discover" style="color:orange;"></i>
            </div>
            <label for="cname">Name on Card</label>
            <input type="text" id="cname" name="cardname" placeholder="John More Doe" required>
          </div>
        </div>
        <label>
          <input type="checkbox" checked="checked" name="sameadr"> Shipping address same as billing
        </label>
        <label>
          <input type="checkbox" checked="checked" name="agree"> By placing this order, you agree to the <a href="Vehicleorderagreement.html">EcoWheels' Vehicle Order Agreement</a>, Terms of Use and the Privacy Notice. You also allow us to save your credit card to pay for future services as described in the payment terms.
        </label>
        <button type="button" id="checkout-button" class="btn">Place Order</button>
      </form>
    </div>
  </div>
  <div class="col-25">
    <div class="container">
      <h4>Cart <span class="price" style="color:black"><i class="fa fa-shopping-cart"></i> <b>4</b></span></h4>
      <p><a href="#">Product 1</a> <span class="price">$15</span></p>
      <p><a href="#">Product 2</a> <span class="price">$5</span></p>
      <p><a href="#">Product 3</a> <span class="price">$8</span></p>
      <p><a href="#">Product 4</a> <span class="price">$2</span></p>
      <hr>
      <p>Total <span class="price" style="color:rgb(221, 210, 210)"><b>$30</b></span></p>
    </div>
  </div>
</div>

<script>
document.getElementById('checkout-button').addEventListener('click', function() {
  window.location.href = 'https://buy.stripe.com/test_aEUdSR7eVb4Ug00eUU';
});
</script>

</body>
</html>
